apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  creationTimestamp: '2019-06-26T13:11:44Z'
  generation: 4
  labels:
    router: router
  name: router
  namespace: default
  resourceVersion: '8253880'
  selfLink: /apis/apps.openshift.io/v1/namespaces/default/deploymentconfigs/router
  uid: f1db31ec-9813-11e9-ac0e-005056bc9e4b
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    router: router
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 0
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        router: router
    spec:
      containers:
        - env:
            - name: DEFAULT_CERTIFICATE_DIR
              value: /etc/pki/tls/private
            - name: DEFAULT_CERTIFICATE_PATH
              value: /etc/pki/tls/private/tls.crt
            - name: ROUTER_CIPHERS
            - name: ROUTER_EXTERNAL_HOST_HOSTNAME
            - name: ROUTER_EXTERNAL_HOST_HTTPS_VSERVER
            - name: ROUTER_EXTERNAL_HOST_HTTP_VSERVER
            - name: ROUTER_EXTERNAL_HOST_INSECURE
              value: 'false'
            - name: ROUTER_EXTERNAL_HOST_INTERNAL_ADDRESS
            - name: ROUTER_EXTERNAL_HOST_PARTITION_PATH
            - name: ROUTER_EXTERNAL_HOST_PASSWORD
            - name: ROUTER_EXTERNAL_HOST_PRIVKEY
              value: /etc/secret-volume/router.pem
            - name: ROUTER_EXTERNAL_HOST_USERNAME
            - name: ROUTER_EXTERNAL_HOST_VXLAN_GW_CIDR
            - name: ROUTER_LISTEN_ADDR
              value: '0.0.0.0:1936'
            - name: ROUTER_METRICS_TLS_CERT_FILE
              value: /etc/pki/tls/metrics/tls.crt
            - name: ROUTER_METRICS_TLS_KEY_FILE
              value: /etc/pki/tls/metrics/tls.key
            - name: ROUTER_METRICS_TYPE
              value: haproxy
            - name: ROUTER_SERVICE_HTTPS_PORT
              value: '443'
            - name: ROUTER_SERVICE_HTTP_PORT
              value: '7008'
            - name: ROUTER_SERVICE_NAME
              value: router
            - name: ROUTER_SERVICE_NAMESPACE
              value: default
            - name: ROUTER_SUBDOMAIN
            - name: ROUTER_THREADS
              value: '0'
            - name: STATS_PASSWORD
              value: IMVYMDe3uq
            - name: STATS_PORT
              value: '1936'
            - name: STATS_USERNAME
              value: admin
            - name: EXTENDED_VALIDATION
              value: 'true'
          image: 'registry.redhat.io/openshift3/ose-haproxy-router:v3.11.104'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: localhost
              path: /healthz
              port: 1936
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: router
          ports:
            - containerPort: 7008
              hostPort: 7008
              protocol: TCP
            - containerPort: 443
              hostPort: 443
              protocol: TCP
            - containerPort: 1936
              hostPort: 1936
              name: stats
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: localhost
              path: healthz/ready
              port: 1936
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/pki/tls/metrics/
              name: metrics-server-certificate
              readOnly: true
            - mountPath: /etc/pki/tls/private
              name: server-certificate
              readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        node-role.kubernetes.io/infra: 'true'
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: router
      serviceAccountName: router
      terminationGracePeriodSeconds: 30
      volumes:
        - name: metrics-server-certificate
          secret:
            defaultMode: 420
            secretName: router-metrics-tls
        - name: server-certificate
          secret:
            defaultMode: 420
            secretName: router-certs
  test: false
  triggers:
    - type: ConfigChange
status:
  availableReplicas: 2
  conditions:
    - lastTransitionTime: '2019-07-18T06:10:43Z'
      lastUpdateTime: '2019-07-18T06:10:43Z'
      message: Deployment config has minimum availability.
      status: 'True'
      type: Available
    - lastTransitionTime: '2019-07-24T05:29:39Z'
      lastUpdateTime: '2019-07-24T05:29:42Z'
      message: replication controller "router-4" successfully rolled out
      reason: NewReplicationControllerAvailable
      status: 'True'
      type: Progressing
  details:
    causes:
      - type: ConfigChange
    message: config change
  latestVersion: 4
  observedGeneration: 4
  readyReplicas: 2
  replicas: 2
  unavailableReplicas: 0
  updatedReplicas: 2
